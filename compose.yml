# compose.yml
services:
  # ========================================
  # 1. WEB LOCAL: HTTP directo (crawler.web.casa.lan)
  # ========================================
  web-local:
    build: .
    container_name: crawler-web-local
    restart: unless-stopped
    ports:
      - "80:80"          # ← Nginx (acceso HTTP local)
      - "3000:3000"      # ← Node.js directo (para depuración)
    expose:
      - "3000"           # ← Para que Nginx interno pueda acceder
    networks:
      - local-network

  # ========================================
  # 2. WEB INTERNET: HTTPS con SSL automático
  # ========================================
  web-internet:
    build: .
    container_name: crawler-web-internet
    restart: unless-stopped
    expose:
      - "80"
    environment:
      - VIRTUAL_HOST=web.conkernel.site
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=web.conkernel.site
      - LETSENCRYPT_EMAIL=${EMAIL}
    networks:
      - proxy-network
    depends_on:
      - nginx-proxy

  # ========================================
  # 3. NGINX PROXY (solo para internet)
  # ========================================
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "443:443"                   # Solo HTTPS para internet
      # NO exponemos 80 aquí → evita conflicto con web-local
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-network
    restart: unless-stopped

  # ========================================
  # 4. CERTBOT (ACME COMPANION)
  # ========================================
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    depends_on:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEFAULT_EMAIL=${EMAIL}
    networks:
      - proxy-network
    restart: unless-stopped

# ========================================
# VOLUMENES
# ========================================
volumes:
  certs:
  vhost:
  html:
  acme:

# ========================================
# REDES
# ========================================
networks:
  local-network:
    driver: bridge
  proxy-network:
    driver: bridge